{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/GitHub/ai-customer-support/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/Chatbot.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Function to handle sending the user message to the backend\n  const sendMessage = async () => {\n    if (!input.trim()) return; // Prevent sending empty messages\n\n    setLoading(true); // Set loading to true during API call\n    try {\n      const result = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: input\n        })\n      });\n      const data = await result.json();\n      setResponse(data.message);\n    } catch (error) {\n      console.error('Error fetching AI response:', error);\n      setResponse('There was an error connecting to the AI service.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Ask the chatbot...\",\n      className: \"input-box\" /* Apply the input-box class here */,\n      rows: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      disabled: loading,\n      className: \"send-button\",\n      children: loading ? 'Sending...' : 'Send'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-response\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"AI Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Ggm0VxumSTB4Ca6+wd6rQCoWImQ=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","response","setResponse","loading","setLoading","sendMessage","trim","result","fetch","method","headers","body","JSON","stringify","prompt","data","json","message","error","console","className","children","value","onChange","e","target","placeholder","rows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/james/Documents/GitHub/ai-customer-support/frontend/src/App.js"],"sourcesContent":["// frontend/src/Chatbot.js\nimport React, { useState } from 'react';\n\nconst Chatbot = () => {\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Function to handle sending the user message to the backend\n  const sendMessage = async () => {\n    if (!input.trim()) return; // Prevent sending empty messages\n\n    setLoading(true); // Set loading to true during API call\n    try {\n      const result = await fetch('/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: input }),\n      });\n\n      const data = await result.json();\n      setResponse(data.message);\n    } catch (error) {\n      console.error('Error fetching AI response:', error);\n      setResponse('There was an error connecting to the AI service.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <textarea\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Ask the chatbot...\"\n        className=\"input-box\" /* Apply the input-box class here */\n        rows=\"3\"\n      />\n      <button onClick={sendMessage} disabled={loading} className=\"send-button\">\n        {loading ? 'Sending...' : 'Send'}\n      </button>\n      {response && (\n        <div className=\"chatbot-response\">\n          <strong>AI Response:</strong>\n          <p>{response}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;;IAE3BF,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAMG,MAAM,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEf;QAAM,CAAC;MACxC,CAAC,CAAC;MAEF,MAAMgB,IAAI,GAAG,MAAMR,MAAM,CAACS,IAAI,CAAC,CAAC;MAChCd,WAAW,CAACa,IAAI,CAACE,OAAO,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDhB,WAAW,CAAC,kDAAkD,CAAC;IACjE,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCzB,OAAA;MACE0B,KAAK,EAAEvB,KAAM;MACbwB,QAAQ,EAAGC,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC,oBAAoB;MAChCN,SAAS,EAAC,WAAW,CAAC;MACtBO,IAAI,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFnC,OAAA;MAAQoC,OAAO,EAAE3B,WAAY;MAAC4B,QAAQ,EAAE9B,OAAQ;MAACiB,SAAS,EAAC,aAAa;MAAAC,QAAA,EACrElB,OAAO,GAAG,YAAY,GAAG;IAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACR9B,QAAQ,iBACPL,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzB,OAAA;QAAAyB,QAAA,EAAQ;MAAY;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7BnC,OAAA;QAAAyB,QAAA,EAAIpB;MAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CA/CID,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAiDb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
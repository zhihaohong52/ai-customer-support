{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/GitHub/ai-customer-support/frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css'; // Import chat-ui styles\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, TypingIndicator } from '@chatscope/chat-ui-kit-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const messageEndRef = useRef(null);\n\n  // Scroll to the bottom when new messages arrive\n  const scrollToBottom = () => {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    try {\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n      const response = await fetch(`${API_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: input\n        })\n      });\n      const data = await response.json();\n      const aiMessage = {\n        text: data.message,\n        sender: 'ai',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error fetching AI response:', error);\n      const errorMessage = {\n        text: 'Error connecting to the AI service.',\n        sender: 'error',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen flex items-center justify-center bg-gray-200\",\n    children: /*#__PURE__*/_jsxDEV(MainContainer, {\n      responsive: true,\n      style: {\n        height: \"100vh\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MessageList, {\n          typingIndicator: loading ? /*#__PURE__*/_jsxDEV(TypingIndicator, {\n            content: \"AI is typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 51\n          }, this) : null,\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n            model: {\n              message: msg.text,\n              sentTime: msg.timestamp,\n              sender: msg.sender === 'user' ? 'You' : 'AI',\n              direction: msg.sender === 'user' ? 'outgoing' : 'incoming',\n              position: 'normal'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messageEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          placeholder: \"Type your message here...\",\n          value: input,\n          onChange: value => setInput(value),\n          onSend: sendMessage,\n          attachButton: false,\n          sendButton: !loading // Disable send button when loading\n          ,\n          disabled: loading // Disable input when loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"wrcy9bXH74Xljfvll4rXKXTOMZ4=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MainContainer","ChatContainer","MessageList","Message","MessageInput","TypingIndicator","jsxDEV","_jsxDEV","Chatbot","_s","input","setInput","messages","setMessages","loading","setLoading","messageEndRef","scrollToBottom","_messageEndRef$curren","current","scrollIntoView","behavior","sendMessage","trim","userMessage","text","sender","timestamp","Date","toLocaleTimeString","prev","API_URL","process","env","REACT_APP_API_URL","response","fetch","method","headers","body","JSON","stringify","prompt","data","json","aiMessage","message","error","console","errorMessage","className","children","responsive","style","height","width","typingIndicator","content","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","model","sentTime","direction","position","ref","placeholder","value","onChange","onSend","attachButton","sendButton","disabled","_c","$RefreshReg$"],"sources":["/Users/james/Documents/GitHub/ai-customer-support/frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';  // Import chat-ui styles\nimport {\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  Message,\n  MessageInput,\n  TypingIndicator\n} from '@chatscope/chat-ui-kit-react';\n\nconst Chatbot = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const messageEndRef = useRef(null);\n\n  // Scroll to the bottom when new messages arrive\n  const scrollToBottom = () => {\n    messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, sender: 'user', timestamp: new Date().toLocaleTimeString() };\n    setMessages((prev) => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n\n    try {\n      const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\n      const response = await fetch(`${API_URL}/api/chat`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: input }),\n      });\n\n      const data = await response.json();\n      const aiMessage = { text: data.message, sender: 'ai', timestamp: new Date().toLocaleTimeString() };\n      setMessages((prev) => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error fetching AI response:', error);\n      const errorMessage = { text: 'Error connecting to the AI service.', sender: 'error', timestamp: new Date().toLocaleTimeString() };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"h-screen w-screen flex items-center justify-center bg-gray-200\">\n      <MainContainer responsive style={{ height: \"100vh\", width: \"100%\" }}>\n        <ChatContainer>\n          <MessageList typingIndicator={loading ? <TypingIndicator content=\"AI is typing...\" /> : null}>\n            {messages.map((msg, index) => (\n              <Message\n                key={index}\n                model={{\n                  message: msg.text,\n                  sentTime: msg.timestamp,\n                  sender: msg.sender === 'user' ? 'You' : 'AI',\n                  direction: msg.sender === 'user' ? 'outgoing' : 'incoming',\n                  position: 'normal'\n                }}\n              />\n            ))}\n            <div ref={messageEndRef} />\n          </MessageList>\n          <MessageInput\n            placeholder=\"Type your message here...\"\n            value={input}\n            onChange={(value) => setInput(value)}\n            onSend={sendMessage}\n            attachButton={false}\n            sendButton={!loading}  // Disable send button when loading\n            disabled={loading}     // Disable input when loading\n          />\n        </ChatContainer>\n      </MainContainer>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}